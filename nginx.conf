events {
    worker_connections 1024;
}

http {
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    client_max_body_size 1m;

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log warn;

    resolver 127.0.0.11 valid=30s;

    # Upstream com fallback
    upstream dyndns_app {
        # Primeiro tenta ddns_node, depois dyndns-app como fallback
        server ddns_node:3000;
        server dyndns-app:3000 backup;
        keepalive 32;
    }

    server {
        listen 80;
        server_name _;

        location / {
            # Proxy com timeout maior para debug
            proxy_pass http://dyndns_app;
            proxy_connect_timeout 10s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
            
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Authorization $http_authorization;
            proxy_pass_header Authorization;
        }

        # Health check interno
        location /nginx-health {
            access_log off;
            return 200 "nginx ok\n";
            add_header Content-Type text/plain;
        }
    }
}
